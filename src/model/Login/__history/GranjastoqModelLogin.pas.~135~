unit GranjastoqModelLogin;

interface

uses
  {FireDac}
  FireDAC.Comp.Client,

  {Projeto}
  GranjastoqControllerLogin, Data.DB;

type
  TModelLogin = class
    private
    public
      destructor Destroy; override;
      function ValidarLogin(Login: TControllerLogin): Boolean;
      procedure BuscarInformacoesDoUsuario(Login: TControllerLogin);

  end;

implementation

uses
  GranjastoqModelFactory;

var
  Conexao: TModelConexaoFactory;
  Query: TFDQuery;
  DataSource: TDataSource;

{ TModelLogin }

procedure TModelLogin.BuscarInformacoesDoUsuario(Login: TControllerLogin);
begin
  Result := nil;
  Conexao := TModelConexaoFactory.Create;
  Query := TFDQuery.Create(nil);
  DataSource := TDataSource.Create(nil);
  try
    Conexao.DataSetMysql.connection.Connected := true;
    Query.Connection := Conexao.DataSetMysql.connection;
    Query.SQL.Text := 'Select * from login';
    Query.Open;

    Query.RecordCount;
    Login.DataSource.DataSet := Query;

  finally
    Query.Free;
    Conexao.Free;
  end;
end;

destructor TModelLogin.Destroy;
begin
  DataSource.Free;
  inherited;
end;

function TModelLogin.ValidarLogin(Login: TControllerLogin): Boolean;
begin
  Conexao := TModelConexaoFactory.Create;
  Query := TFDQuery.Create(nil);
  try
    Conexao.DataSetMysql.connection.Connected := true;
    Query.Connection := Conexao.DataSetMysql.connection;
    Query.SQL.Text := 'Select * from login where usuario LIKE :pUsuario and senha LIKE :pSenha';
    Query.Params.ParamByName('pUsuario').AsString := Login.Usuario;
    Query.Params.ParamByName('pSenha').AsString := Login.SenhaDoUsuario;

    Query.Open;

    if Query.RecordCount > 0 then
      Result := true
    else
      Result := false;

  finally
    Query.Free;
    Conexao.Free;
  end;


end;

end.
